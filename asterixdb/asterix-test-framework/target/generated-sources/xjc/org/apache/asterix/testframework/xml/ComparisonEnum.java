//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.29 at 09:24:42 AM COT 
//


package org.apache.asterix.testframework.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for comparison-enum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="comparison-enum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="XML"/>
 *     &lt;enumeration value="Text"/>
 *     &lt;enumeration value="Binary"/>
 *     &lt;enumeration value="Inspect"/>
 *     &lt;enumeration value="Ignore"/>
 *     &lt;enumeration value="Clean-JSON"/>
 *     &lt;enumeration value="Lossless-JSON"/>
 *     &lt;enumeration value="CSV"/>
 *     &lt;enumeration value="CSV_Header"/>
 *     &lt;enumeration value="AST"/>
 *     &lt;enumeration value="PLAN"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "comparison-enum")
@XmlEnum
public enum ComparisonEnum {

    XML("XML"),
    @XmlEnumValue("Text")
    TEXT("Text"),
    @XmlEnumValue("Binary")
    BINARY("Binary"),
    @XmlEnumValue("Inspect")
    INSPECT("Inspect"),
    @XmlEnumValue("Ignore")
    IGNORE("Ignore"),
    @XmlEnumValue("Clean-JSON")
    CLEAN_JSON("Clean-JSON"),
    @XmlEnumValue("Lossless-JSON")
    LOSSLESS_JSON("Lossless-JSON"),
    CSV("CSV"),
    @XmlEnumValue("CSV_Header")
    CSV_HEADER("CSV_Header"),
    AST("AST"),
    PLAN("PLAN");
    private final String value;

    ComparisonEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ComparisonEnum fromValue(String v) {
        for (ComparisonEnum c: ComparisonEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
