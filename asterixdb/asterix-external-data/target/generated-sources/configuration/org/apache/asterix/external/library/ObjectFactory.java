//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.29 at 09:24:18 AM COT 
//


package org.apache.asterix.external.library;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.apache.asterix.external.library package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _FactoryClass_QNAME = new QName("library", "factory_class");
    private final static QName _ReturnType_QNAME = new QName("library", "return_type");
    private final static QName _Language_QNAME = new QName("library", "language");
    private final static QName _Arguments_QNAME = new QName("library", "arguments");
    private final static QName _Definition_QNAME = new QName("library", "definition");
    private final static QName _FunctionType_QNAME = new QName("library", "function_type");
    private final static QName _Name_QNAME = new QName("library", "name");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.apache.asterix.external.library
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ExternalLibrary }
     * 
     */
    public ExternalLibrary createExternalLibrary() {
        return new ExternalLibrary();
    }

    /**
     * Create an instance of {@link LibraryFunctions }
     * 
     */
    public LibraryFunctions createLibraryFunctions() {
        return new LibraryFunctions();
    }

    /**
     * Create an instance of {@link LibraryFunction }
     * 
     */
    public LibraryFunction createLibraryFunction() {
        return new LibraryFunction();
    }

    /**
     * Create an instance of {@link LibraryAdapters }
     * 
     */
    public LibraryAdapters createLibraryAdapters() {
        return new LibraryAdapters();
    }

    /**
     * Create an instance of {@link LibraryAdapter }
     * 
     */
    public LibraryAdapter createLibraryAdapter() {
        return new LibraryAdapter();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "library", name = "factory_class")
    public JAXBElement<String> createFactoryClass(String value) {
        return new JAXBElement<String>(_FactoryClass_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "library", name = "return_type")
    public JAXBElement<String> createReturnType(String value) {
        return new JAXBElement<String>(_ReturnType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "library", name = "language")
    public JAXBElement<String> createLanguage(String value) {
        return new JAXBElement<String>(_Language_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "library", name = "arguments")
    public JAXBElement<String> createArguments(String value) {
        return new JAXBElement<String>(_Arguments_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "library", name = "definition")
    public JAXBElement<String> createDefinition(String value) {
        return new JAXBElement<String>(_Definition_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "library", name = "function_type")
    public JAXBElement<String> createFunctionType(String value) {
        return new JAXBElement<String>(_FunctionType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "library", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

}
