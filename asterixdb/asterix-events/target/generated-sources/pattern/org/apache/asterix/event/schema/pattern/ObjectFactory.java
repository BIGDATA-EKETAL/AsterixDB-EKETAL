//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.12.29 at 09:24:14 AM COT 
//


package org.apache.asterix.event.schema.pattern;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.apache.asterix.event.schema.pattern package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Max_QNAME = new QName("patterns", "max");
    private final static QName _Pargs_QNAME = new QName("patterns", "pargs");
    private final static QName _Set_QNAME = new QName("patterns", "set");
    private final static QName _Min_QNAME = new QName("patterns", "min");
    private final static QName _Abs_QNAME = new QName("patterns", "abs");
    private final static QName _Reuse_QNAME = new QName("patterns", "reuse");
    private final static QName _Unit_QNAME = new QName("patterns", "unit");
    private final static QName _Absvalue_QNAME = new QName("patterns", "absvalue");
    private final static QName _Type_QNAME = new QName("patterns", "type");
    private final static QName _Exclude_QNAME = new QName("patterns", "exclude");
    private final static QName _MaxOccurs_QNAME = new QName("patterns", "maxOccurs");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.apache.asterix.event.schema.pattern
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Period }
     * 
     */
    public Period createPeriod() {
        return new Period();
    }

    /**
     * Create an instance of {@link Patterns }
     * 
     */
    public Patterns createPatterns() {
        return new Patterns();
    }

    /**
     * Create an instance of {@link Pattern }
     * 
     */
    public Pattern createPattern() {
        return new Pattern();
    }

    /**
     * Create an instance of {@link Delay }
     * 
     */
    public Delay createDelay() {
        return new Delay();
    }

    /**
     * Create an instance of {@link Value }
     * 
     */
    public Value createValue() {
        return new Value();
    }

    /**
     * Create an instance of {@link Random }
     * 
     */
    public Random createRandom() {
        return new Random();
    }

    /**
     * Create an instance of {@link Minmax }
     * 
     */
    public Minmax createMinmax() {
        return new Minmax();
    }

    /**
     * Create an instance of {@link Range }
     * 
     */
    public Range createRange() {
        return new Range();
    }

    /**
     * Create an instance of {@link Event }
     * 
     */
    public Event createEvent() {
        return new Event();
    }

    /**
     * Create an instance of {@link Nodeid }
     * 
     */
    public Nodeid createNodeid() {
        return new Nodeid();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "max")
    public JAXBElement<String> createMax(String value) {
        return new JAXBElement<String>(_Max_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "pargs")
    public JAXBElement<String> createPargs(String value) {
        return new JAXBElement<String>(_Pargs_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "set")
    public JAXBElement<String> createSet(String value) {
        return new JAXBElement<String>(_Set_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "min")
    public JAXBElement<String> createMin(String value) {
        return new JAXBElement<String>(_Min_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "abs")
    public JAXBElement<String> createAbs(String value) {
        return new JAXBElement<String>(_Abs_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "reuse")
    public JAXBElement<Boolean> createReuse(Boolean value) {
        return new JAXBElement<Boolean>(_Reuse_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "unit")
    public JAXBElement<String> createUnit(String value) {
        return new JAXBElement<String>(_Unit_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "absvalue")
    public JAXBElement<String> createAbsvalue(String value) {
        return new JAXBElement<String>(_Absvalue_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "type")
    public JAXBElement<String> createType(String value) {
        return new JAXBElement<String>(_Type_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "exclude")
    public JAXBElement<String> createExclude(String value) {
        return new JAXBElement<String>(_Exclude_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "patterns", name = "maxOccurs")
    public JAXBElement<Integer> createMaxOccurs(Integer value) {
        return new JAXBElement<Integer>(_MaxOccurs_QNAME, Integer.class, null, value);
    }

}
